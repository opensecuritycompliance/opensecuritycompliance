apiVersion: v1alpha1
kind: rule
meta:
  name: FetchGitHubPullRequests
  purpose: FetchGitHubPullRequests
  description: FetchGitHubPullRequests
  labels:
    appType:
    - httprequest
    environment:
    - logical
    execlevel:
    - app
    framework:
    - github
spec:
  inputs:
    CustomExceptionConfigFileForPR: <<MINIO_FILE_PATH>>
    InScopeRepos: <<MINIO_FILE_PATH>>
    LogConfigFile: <<MINIO_FILE_PATH>>
    PR-JQConfig: <<MINIO_FILE_PATH>>
    PRRequestConfig: <<MINIO_FILE_PATH>>
    PRResponseConfig: <<MINIO_FILE_PATH>>
    ProceedIfLogExists: false
    RequiredFields:
    - RepositoryName
    RuleOutputFileFormat: PARQUET
  inputsMeta__:
  - name: PRRequestConfig
    dataType: HTTP_CONFIG
    repeated: false
    format: toml
    defaultValue: <<MINIO_FILE_PATH>>
    allowedValues: []
    showField: true
    required: true
  - name: PRResponseConfig
    dataType: HTTP_CONFIG
    repeated: false
    format: toml
    defaultValue: <<MINIO_FILE_PATH>>
    allowedValues: []
    showField: true
    required: true
  - name: InScopeRepos
    dataType: FILE
    repeated: false
    format: json
    defaultValue: <<MINIO_FILE_PATH>>
    allowedValues: []
    showField: true
    required: true
  - name: PR-JQConfig
    dataType: FILE
    repeated: false
    format: toml
    defaultValue: <<MINIO_FILE_PATH>>
    allowedValues: []
    showField: true
    required: true
  - name: LogConfigFile
    dataType: FILE
    repeated: false
    format: toml
    defaultValue: <<MINIO_FILE_PATH>>
    allowedValues: []
    showField: true
    required: true
  - name: ProceedIfLogExists
    dataType: BOOLEAN
    repeated: false
    defaultValue: false
    allowedValues: []
    showField: true
    required: true
  - name: CustomExceptionConfigFileForPR
    dataType: FILE
    repeated: false
    format: json
    defaultValue: <<MINIO_FILE_PATH>>
    allowedValues: []
    showField: true
    required: true
  - name: RequiredFields
    dataType: STRING
    repeated: true
    defaultValue:
    - RepositoryName
    allowedValues: []
    showField: true
    required: true
  - name: RuleOutputFileFormat
    dataType: STRING
    repeated: false
    defaultValue: PARQUET
    allowedValues:
    - JSON
    - CSV
    - PARQUET
    - YAML
    - TOML
    - XLSX
    showField: true
    required: true
  tasks:
  - name: InputFieldValidation
    alias: Field Validation for InScopeRepos File
    type: task
    appTags:
      appType:
      - nocredapp
      environment:
      - logical
      execlevel:
      - app
    purpose: Purpose of the task
    description: Validates records by ensuring all required fields are present, logging
      errors for missing fields.
  - name: ExecuteHttpRequestV2
    alias: Fetch PR data
    type: task
    appTags:
      appType:
      - httprequest
      environment:
      - logical
      execlevel:
      - app
      framework:
      - github
    purpose: Purpose of the task
    description: Automate API requests by processing inputs and outputting responses
      in a structured JSON format.
  - name: ConditionalLogGenerator
    alias: Generate Conditional Logs
    type: task
    appTags:
      appType:
      - nocredapp
      environment:
      - logical
      execlevel:
      - app
    purpose: Purpose of the task
    description: Generates log data based on conditions.
  - name: ExtractDataUsingJQV2
    alias: Extract And Standardize PR Data
    type: task
    appTags:
      appType:
      - nocredapp
      environment:
      - logical
      execlevel:
      - app
    purpose: Purpose of the task
    description: Extracts data from the InputFile based on the provided JQ filter/expression
  - name: CustomExceptionHandler
    alias: Custom Error Message for Exception Handling
    type: task
    appTags:
      appType:
      - nocredapp
      environment:
      - logical
      execlevel:
      - app
    purpose: Purpose of the task
    description: Handles specific exceptions and map generic error messages to user-friendly,
      task-specific messages. It ensures that errors encountered during task execution
      are appropriately managed and presented in a more understandable format.
  - name: ConvertFileFormatV2
    alias: Convert Rule Output File Format
    type: task
    appTags:
      appType:
      - nocredapp
      environment:
      - logical
      execlevel:
      - app
    purpose: Purpose of the task
    description: 'Convert files between the supported formats: JSON, CSV, PARQUET,
      YAML, TOML, and XLSX.'
  ioMap:
  - Field Validation for InScopeRepos File.Input.InputFile:=*.Input.InScopeRepos
  - Field Validation for InScopeRepos File.Input.RequiredFields:=*.Input.RequiredFields
  - Fetch PR data.Input.RequestConfigFile:=*.Input.PRRequestConfig
  - Fetch PR data.Input.ResponseConfigFile:=*.Input.PRResponseConfig
  - Fetch PR data.Input.InputFile:=Field Validation for InScopeRepos File.Output.ValidDataFile
  - Fetch PR data.Input.LogFile:=Field Validation for InScopeRepos File.Output.LogFile
  - Generate Conditional Logs.Input.InputFile:=Fetch PR data.Output.OutputFile
  - Generate Conditional Logs.Input.LogFile:=Fetch PR data.Output.LogFile
  - Generate Conditional Logs.Input.LogConfigFile:=*.Input.LogConfigFile
  - Generate Conditional Logs.Input.ProceedIfLogExists:=*.Input.ProceedIfLogExists
  - Extract And Standardize PR Data.Input.InputFile:=Generate Conditional Logs.Output.OutputFile
  - Extract And Standardize PR Data.Input.JQConfigFile:=*.Input.PR-JQConfig
  - Extract And Standardize PR Data.Input.LogFile:=Generate Conditional Logs.Output.LogFile
  - Custom Error Message for Exception Handling.Input.InputFile1:=Extract And Standardize
    PR Data.Output.OutputFile
  - Custom Error Message for Exception Handling.Input.LogFile:=Extract And Standardize
    PR Data.Output.LogFile
  - Custom Error Message for Exception Handling.Input.CustomExceptionConfigFile:=*.Input.CustomExceptionConfigFileForPR
  - Convert Rule Output File Format.Input.InputFile:=Custom Error Message for Exception
    Handling.Output.OutputFile1
  - Convert Rule Output File Format.Input.OutputFileFormat:=*.Input.RuleOutputFileFormat
  - Convert Rule Output File Format.Input.LogFile:=Custom Error Message for Exception
    Handling.Output.LogFile
  - '*.Output.CompliancePCT_:=Convert Rule Output File Format.Output.CompliancePCT_'
  - '*.Output.ComplianceStatus_:=Convert Rule Output File Format.Output.ComplianceStatus_'
  - '*.Output.LogFile:=Convert Rule Output File Format.Output.LogFile'
  - '*.Output.GitHubPullRequestsList:=Convert Rule Output File Format.Output.OutputFile'