authors:
- rufus.p@continube.com
domain: continube
createdDate: 09/09/2024
name: CheckCondition
displayName: CheckCondition
version: '1.0'
description: Checks whether the records in the InputFile matches the conditions provided in the ConditionConfig file
shaToken: ''
showInCatalog: true
icon: '<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 50 50" width="250px" height="250px"><path d="M 25 2 C 12.309288 2 2 12.309297 2 25 C 2 37.690703 12.309288 48 25 48 C 37.690712 48 48 37.690703 48 25 C 48 12.309297 37.690712 2 25 2 z M 25 4 C 36.609833 4 46 13.390175 46 25 C 46 36.609825 36.609833 46 25 46 C 13.390167 46 4 36.609825 4 25 C 4 13.390175 13.390167 4 25 4 z M 32.287109 9.625 C 30.334109 9.625 28.541203 10.910047 27.783203 11.748047 C 25.256203 14.506047 25.033156 16.596719 24.535156 18.136719 L 22.703125 18.136719 C 22.455125 18.136719 22.392375 18.228766 22.359375 18.384766 L 22.158203 19.220703 C 22.124203 19.374703 22.213141 19.5 22.369141 19.5 L 24.175781 19.5 L 21.369141 30.578125 C 19.969141 36.157125 18.749469 38.40625 17.230469 38.40625 C 16.794469 38.40625 16.581641 38.188906 16.556641 37.878906 C 16.473641 36.618906 15.792781 36.023438 14.800781 36.023438 C 13.839781 36.023438 13.257188 36.920109 13.242188 37.787109 C 13.222187 38.965109 14.414391 39.800781 16.275391 39.800781 C 20.088391 39.800781 22.432734 36.756469 24.552734 31.105469 C 25.725734 27.852469 26.768141 22.049813 27.494141 19.507812 L 29.931641 19.507812 C 30.179641 19.507812 30.245297 19.414266 30.279297 19.197266 L 30.447266 18.421875 C 30.481266 18.234875 30.422328 18.142578 30.236328 18.142578 L 27.765625 18.142578 C 28.628625 14.826578 29.802656 10.896484 31.847656 10.896484 C 32.561656 10.896484 32.900031 11.455625 32.957031 11.765625 C 33.129031 12.521625 33.082766 13.4375 34.384766 13.4375 C 35.283766 13.4375 36.020203 12.490844 36.033203 11.714844 C 36.053203 10.599844 34.953109 9.625 32.287109 9.625 z M 19.296875 11.316406 C 18.359875 11.316406 17.571641 12.247984 17.556641 13.208984 C 17.538641 14.386984 18.217969 15.099609 19.292969 15.099609 C 20.313969 15.099609 21.211562 14.014688 21.226562 13.054688 C 21.241563 12.092688 20.621875 11.317406 19.296875 11.316406 z M 18.060547 17.716797 C 16.799547 17.716797 15.793109 18.343531 14.912109 19.019531 C 13.475109 20.123531 12.520875 21.506094 12.421875 21.621094 C 12.359875 21.682094 12.418766 21.808391 12.509766 21.900391 L 12.818359 22.214844 C 12.909359 22.308844 13.032203 22.308594 13.158203 22.183594 C 13.539203 21.688594 14.482109 20.877781 14.912109 20.550781 C 15.126109 20.387781 15.380953 20.419719 15.376953 20.636719 C 15.373953 20.760719 15.365219 20.828094 15.324219 20.996094 C 15.243219 21.331094 15.138359 21.581187 14.943359 22.117188 L 14.064453 24.566406 C 12.697453 28.348406 12.178766 29.160031 12.134766 30.332031 C 12.116766 30.796031 12.398125 31.295719 13.328125 31.261719 C 17.111125 31.122719 18.813734 28.008109 19.177734 27.662109 C 19.272734 27.508109 19.243344 27.445516 19.152344 27.353516 L 18.683594 26.912109 C 18.623594 26.851109 18.498547 26.851359 18.435547 26.943359 C 18.244547 27.223359 16.873906 28.748047 16.253906 28.748047 C 15.943906 28.748047 15.985453 28.507797 16.064453 28.216797 C 16.143453 27.925797 16.272375 27.529078 16.484375 26.955078 L 18.353516 22.242188 C 19.004516 20.443187 19.391297 19.514031 19.404297 18.832031 C 19.415297 18.212031 19.020547 17.716797 18.060547 17.716797 z M 30.230469 27.572266 C 29.316469 27.572266 28.366563 28.472594 28.351562 29.433594 C 28.333563 30.611594 28.996922 31.324219 30.044922 31.324219 C 31.039922 31.324219 31.914687 30.239297 31.929688 29.279297 C 31.943688 28.317297 31.521469 27.572266 30.230469 27.572266 z M 35.541016 27.572266 C 34.627016 27.572266 33.677109 28.472594 33.662109 29.433594 C 33.644109 30.611594 34.305516 31.324219 35.353516 31.324219 C 36.348516 31.324219 37.223281 30.239297 37.238281 29.279297 C 37.252281 28.317297 36.832016 27.572266 35.541016 27.572266 z M 40.851562 27.572266 C 39.937563 27.572266 38.987656 28.472594 38.972656 29.433594 C 38.954656 30.611594 39.616062 31.324219 40.664062 31.324219 C 41.659063 31.324219 42.535781 30.239297 42.550781 29.279297 C 42.564781 28.317297 42.141563 27.572266 40.851562 27.572266 z"/></svg>'
type: python
tags:
- generic
applicationType: generic
userObjectJSONInBase64: ''
systemObjectJSONInBase64: ''
inputs:
- name: InputFile
  description: The file containing an array of data with which the conditions must be checked from the ConditionConfig file
  dataType: FILE
  repeated: false
  allowedValues: []
  defaultValue: <<MINIO_FILE_PATH>>
  showField: true
  required: true
- name: ConditionConfig 
  description: The file that contains the conditions to check, and the field update data
  dataType: FILE
  repeated: false
  templateFile: 
  format: toml
  allowedValues: []
  defaultValue: <<MINIO_FILE_PATH>>
  showField: true
  required: true
- name: CustomInputs 
  description: This file contains any dynamic inputs that you may want to pass, to process the conditions
  dataType: FILE
  repeated: false
  allowedValues: []
  defaultValue: <<MINIO_FILE_PATH>>
  showField: true
  required: false
- name: LogFile 
  description: Map the LogFile from the previous task, to handle errors
  dataType: FILE
  repeated: false
  allowedValues: []
  defaultValue: <<MINIO_FILE_PATH>>
  showField: true
  required: false
outputs:
- name: MatchedConditionFile
  description: File that contains records from InputFile that passed the condition
  dataType: FILE
- name: UnmatchedConditionFile
  description: File that contains records from InputFile that did not pass the condition
  dataType: FILE
- name: LogFile
  description: File that contains information about errors that have occurred while processing the conditions
  dataType: FILE
- name: ComplianceStatus_
  description: Compliance status of the task
  dataType: STRING
- name: CompliancePCT_
  description: Compliance percentage of the task
  dataType: INT
